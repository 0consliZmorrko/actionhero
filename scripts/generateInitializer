#!/usr/bin/env node
// npm run-script actionHero generateInitializer

var fs = require('fs');
var colors = require('colors');
var async = require('async');

String.prototype.trim=function(){return this.replace(/(?:(?:^|\n)\s+|\s+(?:$|\n))/g,'').replace(/\s+/g,' ');}

process.stdin.setEncoding('utf8');

process.stdin.on('data', function (text) {
  if(typeof waitingInput == "function"){
    waitingInput(text.trim());
  }
});

var data = {};
data['name'] = null;

var waitingInput = null;

var stringifyArray = function(arr){
  var s = "";
  var used = 0;
  for(var i in arr){
    if(used > 0){ s+= ", ";}
    if(arr[i].length > 0){
      s += '"' + arr[i] + '"';
      used++;
    }
  }
  return s;
}

var generateFile = function(){
  var templateLines = [];

  templateLines.push('exports.'+data['name']+' = function(api, next){');
  templateLines.push('');
  templateLines.push('  // modify / append the api global variable');
  templateLines.push('  // I will be run as part of actionHero\'s boot process');
  templateLines.push('');
  templateLines.push('  next();');
  templateLines.push('}');

  var filename = process.cwd() + "/../../initializers/" + data['name'] + ".js";
  for(var i in templateLines){
    fs.appendFileSync(filename, templateLines[i]);
    fs.appendFileSync(filename, "\r\n");
  }

  console.log((" > Initializer file created @ " + filename).green);
}

var captureInput = function(prompt, variable, next){
  console.log(prompt);
  waitingInput = function(input){
    data[variable] = input;
    process.stdin.pause();
    next();
  };
  process.stdin.resume();
}

async.series({
  welcome: function(next){ 
    console.log("Generate an actionHero Initializers".bold);
    console.log("");
    next();
  },
  getInitializerName: function(next){ 
    captureInput(" > Name of the initializer (no spaces, should be like \"initMySQL or initUsers\") ?", "name", next);
  },
  generateIt: function(next){ 
    console.log(" > Generating...");
    next();
  },
  write: function(next){ 
    generateFile();
    next();
  },
});

